{
  "obcloud-demos.src.constants.data.OrderBusiness": "订单业务",
  "obcloud-demos.src.constants.data.Retail": "零售行业",
  "obcloud-demos.src.constants.data.OrderInformationTable": "订单信息表",
  "obcloud-demos.src.constants.data.CommodityInformationSheet": "商品信息表",
  "obcloud-demos.src.constants.data.MemberInformationSheet": "会员信息表",
  "obcloud-demos.src.constants.data.MemberSystem": "会员系统",
  "obcloud-demos.src.constants.data.InvoicingBusiness": "进销存业务",
  "obcloud-demos.src.constants.data.CarCarNetworking": "汽车车联网",
  "obcloud-demos.src.constants.data.Manufacturing": "制造行业",
  "obcloud-demos.src.constants.data.BatteryForTheAutomotiveIndustry": "汽车行业电池",
  "obcloud-demos.src.constants.data.ConsumerElectronicsIndustryInventory": "消费电子行业库存",
  "obcloud-demos.src.constants.data.EducationItemBank": "教育题库",
  "obcloud-demos.src.constants.data.Internet": "互联网行业",
  "obcloud-demos.src.constants.data.MutualFundTradingBusiness": "互金交易业务",
  "obcloud-demos.src.constants.data.SaasBusiness": "SaaS 业务",
  "obcloud-demos.src.constants.mock.ZhangSan": "张三",
  "obcloud-demos.src.constants.mock.LiSi": "李四",
  "obcloud-demos.src.constants.mock.Waffle": "威化饼",
  "obcloud-demos.src.constants.mock.LiFeng": "李峰",
  "obcloud-demos.src.constants.mock.WangLiang": "王亮",
  "obcloud-demos.src.constants.mock.Chocolate": "巧克力",
  "obcloud-demos.src.constants.mock.SongXiaolin": "宋小林",
  "obcloud-demos.src.constants.mock.WuWei": "吴伟",
  "obcloud-demos.src.constants.mock.Puffs": "泡芙",
  "obcloud-demos.src.constants.mock.Beijing": "北京",
  "obcloud-demos.src.constants.mock.Food": "食品",
  "obcloud-demos.src.constants.mock.PepsiCola": "百事可乐",
  "obcloud-demos.src.constants.mock.Drinks": "饮料",
  "obcloud-demos.src.constants.mock.LaySChipsCucumberFlavor": "乐事薯片（黄瓜味）",
  "obcloud-demos.src.constants.mock.PuffedFood": "膨化食品",
  "obcloud-demos.src.constants.mock.Buyers": "买家",
  "obcloud-demos.src.constants.mock.Reviewed": "已审核",
  "obcloud-demos.src.constants.mock.Seller": "卖家",
  "obcloud-demos.src.constants.mock.NotAudited": "未审核",
  "obcloud-demos.src.constants.mock.Supplier": "供应商",
  "obcloud-demos.src.constants.mock.ToBeReviewed": "待审核",
  "obcloud-demos.pages.compression.a.Reset": "重置",
  "obcloud-demos.pages.compression.a.ThePageCrashed": "页面崩溃了～",
  "obcloud-demos.compression.hooks.useCompression.GroupIndustryDataSets": "{group}行业数据集",
  "obcloud-demos.pages.compression.SelectIndustryDataset": "选择行业数据集",
  "obcloud-demos.pages.compression.DataVolume": "数据量",
  "obcloud-demos.pages.compression.InvolvingSensitiveDataTemporarilyCannot": "涉及敏感数据暂时无法展示",
  "obcloud-demos.pages.compression.Reset": "重置",
  "obcloud-demos.pages.compression.ImportData": "导入数据",
  "obcloud-demos.components.mysql.CoreBusiness": "核心业务",
  "obcloud-demos.components.mysql.SmallBusiness": "小业务",
  "obcloud-demos.components.mysql.EdgeBusiness": "边缘业务",
  "obcloud-demos.ob.tenant.CoreBusiness": "核心业务",
  "obcloud-demos.ob.tenant.SmallBusiness": "小业务",
  "obcloud-demos.ob.tenant.EdgeBusiness": "边缘业务",
  "obcloud-demos.pages.instance.MysqlMultiInstanceDatabase": "MySQL 多实例数据库",
  "obcloud-demos.pages.instance.ObCloudSingleClusterMulti": "OB Cloud 单集群多租户",
  "obcloud-demos.pages.instance.MediumSizedCompanies": "中型规模公司",
  "obcloud-demos.pages.instance.LargeScaleCompanies": "大型规模公司",
  "obcloud-demos.pages.instance.CpuSpecifications": "CPU 规格",
  "obcloud-demos.pages.instance.AverageCpuUsage": "CPU 平均使用率",
  "obcloud-demos.pages.instance.ClusterDimension": "集群维度",
  "obcloud-demos.pages.instance.TenantDimension": "租户维度",
  "obcloud-demos.pages.instance.VerifiedByRealBusinessScenarios.1": "经真实业务场景验证，相比 MySQL 多实例数据库，OB Cloud 单集群多租户可以帮客户降低 {precent} 的硬件成本。",
  "obcloud-demos.pages.compression.InGroupScenariosMigratingData": "在 {group} 场景下，数据从 MySQL 迁移至 OB Cloud ，可以帮客户降低 {percent} 的存储成本",
  "oceanbase-demo.app.layout.OceanbaseDemoApplication": "OceanBase Demo 演示应用",
  "oceanbase-demo.component.Main.OneHundredThousand": "十万",
  "oceanbase-demo.component.Main.Millions": "百万",
  "oceanbase-demo.component.Main.TenMillion": "千万",
  "oceanbase-demo.component.Main.Billion": "亿",
  "oceanbase-demo.component.Main.MvDataVolume": "MV 数据量: 十万",
  "oceanbase-demo.component.Main.MvDataVolumeMillions": "MV 数据量: 百万",
  "oceanbase-demo.component.Main.MvDataVolumeTensOf": "MV 数据量: 千万",
  "oceanbase-demo.component.Main.MvDataVolumeBillion": "MV 数据量: 亿",
  "oceanbase-demo.component.Main.ViewMaterializedViews": "查物化视图",
  "oceanbase-demo.component.Main.CheckTheMaterializedVisualChart": "查物化视图+表",
  "oceanbase-demo.component.Main.NotUsingMaterializedViews": "不使用物化视图",
  "oceanbase-demo.component.Main.TwoTableJoinMkv": "两表连接（MKV）",
  "oceanbase-demo.component.Main.SingleTableAggregationMav": "单表聚合 (MAV)",
  "oceanbase-demo.component.Main.ConnectionPlusAggregation": "连接加聚合",
  "oceanbase-demo.component.Main.MvDataVolume.1": "MV 数据量",
  "oceanbase-demo.component.Main.AnalysisResults": "分析结果",
  "oceanbase-demo.component.Main.SqlContent": "SQL 内容",
  "oceanbase-demo.component.Main.PutItAway": "收起 ▲",
  "oceanbase-demo.component.Main.Expand": "展开 ▼",
  "oceanbase-demo.materialized-view.constant.CreateTableTAInt": "\ncreate table t1(a int, b int, c int, primary key(a, b)); //创建基表\n... //插入数据\n\nCREATE MATERIALIZED VIEW mv1(primary key (a,b))  parallel 30\npartition by hash(a) partitions 4\nREFRESH fast START WITH sysdate() NEXT sysdate() + INTERVAL 1 second\nenable on query computation\nas select t1.a, t1.b, t1.c, t2.d, t2.e from t1 join t2 on t1.b=t2.d; //创建物化视图\n...//绑定执行计划等\n\nselect  /*+ no_mv_rewrite */ count(*) from mv1;//查物化视图\nselect count(*) from mv1;//查物化视图加表\nselect count(*) from (select t1.a, t1.b, t1.c, t2.d, t2.e from t1 join t2 on t1.b=t2.d);//不使用物化视图查询\n",
  "oceanbase-demo.materialized-view.constant.CreateTableTAInt.1": "\ncreate table t1(a int, b int, c int, primary key(a, b)); //创建基表\n... //插入数据\n\nCREATE MATERIALIZED VIEW mv2(a,count_b,count,sum_b,primary key(a))  parallel 30\nREFRESH fast START WITH sysdate() NEXT sysdate() + INTERVAL 1 second\nenable on query computation\nas select a, count(b), count(*), sum(b) from t1 group by a; //创建物化视图\n...//绑定执行计划等\n\nselect  /*+ no_mv_rewrite */ * from mv2;//查物化视图\nselect  * from mv2;//查物化视图加表\nselect a, count(b), count(*), sum(b) from t1 group by a;//不使用物化视图查询\n",
  "oceanbase-demo.materialized-view.constant.CreateTableTAInt.2": "\ncreate table t1(a int, b int, c int, primary key(a, b)); //创建基表\n... //插入数据\n\nCREATE MATERIALIZED VIEW mv3(a,count_b,count,sum_b, primary key(a)) parallel 30 \npartition by hash(a) partitions 4\nREFRESH fast START WITH sysdate() NEXT sysdate() + INTERVAL 1 second\nenable on query computation\nas select a, count(b), count(*), sum(b) from t1 join t2 on t1.b=t2.d group by a; //创建物化视图\n...//绑定执行计划等\n\nselect  /*+ no_mv_rewrite */ * from mv3; //查物化视图\nselect  * from mv3; //查物化视图加表\nselect a, count(b), count(*), sum(b) from t1 join t2 on t1.b=t2.d group by a;//不使用物化视图查询\n",
  "oceanbase-demo.app.materialized-view.layout.MaterializedViewDemo": "物化视图 Demo",
  "oceanbase-demo.app.materialized-view.layout.OceanbaseMaterializedViewDemoApplication": "OceanBase 物化视图演示应用",
  "oceanbase-demo.app.page.MaterializedView": "物化视图",
  "oceanbase-demo.app.page.OceanbaseMaterializedViewFeatureDemo": "OceanBase 物化视图功能演示",
  "oceanbase-demo.app.page.SharedStorage": "共享存储",
  "oceanbase-demo.app.page.OceanbaseSharedStorageFeatureDemo": "OceanBase 共享存储功能演示",
  "oceanbase-demo.app.page.OceanbaseFunctionDemonstration": "OceanBase 功能演示",
  "oceanbase-demo.app.page.SelectTheFunctionModuleBelow": "选择下面的功能模块开始体验",
  "oceanbase-demo.app.page.ClickToEnter": "点击进入-测试文案用，不需要关注",
  "oceanbase-demo.component.Charts.ResultChart.ExpansionContractionTime": "扩/缩容耗时",
  "oceanbase-demo.component.Charts.ResultChart.DataVolume": "数据量",
  "oceanbase-demo.component.Charts.ResultChart.StorageAndCalculationIntegration": "存算一体",
  "oceanbase-demo.component.Charts.ResultChart.StorageAndCalculationSeparation": "存算分离",
  "oceanbase-demo.component.DescribeContainer.Scenario": "场景 1",
  "oceanbase-demo.component.DescribeContainer.Scene": "场景 2",
  "oceanbase-demo.component.DescribeContainer.LoadRise": "负载上升",
  "oceanbase-demo.component.DescribeContainer.LoadReduction": "负载降低",
  "oceanbase-demo.component.DescribeContainer.SwitchScenarios": "切换场景",
  "oceanbase-demo.component.DescribeContainer.Expansion": "扩容",
  "oceanbase-demo.component.DescribeContainer.Shrinkage": "缩容",
  "oceanbase-demo.component.Main.StorageAndCalculationIntegration": "存算一体",
  "oceanbase-demo.component.Main.StorageAndCalculationSeparation": "存算分离",
  "oceanbase-demo.component.Main.AddHostTakesMinute": "添加主机（用时 1 分钟）",
  "oceanbase-demo.component.Main.ReduceHostMinute": "减少主机（用时 1 分钟）",
  "oceanbase-demo.component.Main.DataEqualizationHours": "数据均衡（用时 10 小时）",
  "oceanbase-demo.component.Main.CompletedTakesHours": "已完成（用时 10 小时）",
  "oceanbase-demo.component.Main.LoadingMetadataTakesMinute": "加载元数据（用时 1 分钟）",
  "oceanbase-demo.component.Main.CompletedMinute": "已完成（用时 1 分钟）",
  "oceanbase-demo.component.Main.ShorterTime": "🎉   用时更短",
  "oceanbase-demo.component.Main.WhenTheLoadChangesGreatly": "负载变化较大时，存算分离架构扩缩容无需拷贝数据，弹性更快速",
  "oceanbase-demo.component.Overview.StorageAndCalculationIntegration": "存算一体",
  "oceanbase-demo.component.Overview.StorageAndCalculationSeparation": "存算分离",
  "oceanbase-demo.component.Overview.EssdPlCloudDisk": "3 副本 ESSD PL1云盘",
  "oceanbase-demo.component.Overview.GbMonth": "￥3/GB/月",
  "oceanbase-demo.component.Overview.AliyunCommodityCatalogPriceFor": "阿里云商品目录价，仅供参考",
  "oceanbase-demo.component.Overview.SingleCopyEssdPlCache": "单副本 ESSD PL1 缓存 + 对象存储",
  "oceanbase-demo.component.Overview.GbMonth.1": "￥0.8/GB/月",
  "oceanbase-demo.component.Overview.CalculatingCostsDown": "计算成本降至",
  "oceanbase-demo.component.Overview.StorageCostsAreReduced": "，存储成本下降",
  "oceanbase-demo.component.Storage.Storage": "存储",
  "oceanbase-demo.component.Storage.Calculation": "计算",
  "oceanbase-demo.app.shared-storage.layout.SharedStorageDemo": "共享存储 Demo",
  "oceanbase-demo.app.shared-storage.layout.OceanbaseSharedStorageDemoApp": "OceanBase 共享存储演示应用",
  "oceanbase-demo.app.shared-storage.page.LargeStorageBusinessScenarioCost": "大存储业务场景降本",
  "oceanbase-demo.app.shared-storage.page.CapacityExpansionAndContractionSpeed": "扩缩容提速",
  "document-search.components.Main.OceanbaseVectorRetrieval": "OceanBase 向量检索",
  "document-search.components.Main.OceanbaseDatabaseFunctionIntroduction": "OceanBase 数据库功能介绍",
  "document-search.components.Main.OceanbaseSharedStorage": "OceanBase 共享存储",
  "document-search.components.Main.DocumentAssistantAiWorkshopEdition": "文档小助手",
  "document-search.components.Main.OnlyOceanbaseVSqlDocuments": "仅支持 OceanBase V4.3.5 SQL 型文档",
  "document-search.components.Main.BuildUsingOceanbaseVectorRetrieval": "使用 OceanBase 向量检索特性和大语言模型能力构建",
  "document-search.components.Main.PleaseEnterYourQuestion": "请输入您的问题",
  "document-search.components.Main.AllContentGeneratedByThis": "本应用生成的所有内容均由人工智能模型生成，其生成内容的准确性和完整性无法保证，不代表我们的观点，仅供您参考。您使用本应用需遵守《",
  "document-search.components.Main.OceanbaseOfficialWebsiteServiceAgreement": "OceanBase官方网站服务协议",
  "document-search.components.Main.OceanbaseOfficialWebsitePrivacyPolicy": "OceanBase官方网站隐私政策",
  "image-search.component.SearchResult.UploadImage": "上传图片",
  "image-search.component.SearchResult.ReUpload": "重新上传",
  "image-search.component.SearchResult.ItDoesnTMatterIf": "没有图片没关系，试试这些图片",
  "image-search.component.SearchResult.RelatedResults": "相关结果",
  "image-search.component.SearchResult.Similarity": "相似度：",
  "image-search.component.UploadImg.MoeBeastSearch": "萌兽搜搜",
  "image-search.component.UploadImg.SearchForSimilarMammalOr": "使用 OceanBase 向量搜索相似的哺乳动物或鸟类图片",
  "image-search.component.UploadImg.DragAMammalOrBird": "拖拽哺乳动物或鸟类图片到此处 或",
  "image-search.component.UploadImg.SelectFile": "选择文件",
  "image-search.component.UploadImg.TheFileSizeDoesNot": "文件大小不超过 200 MB，格式支持 jpg，jpeg，png",
  "image-search.component.UploadImg.ItDoesnTMatterIf": "没有图片没关系，试试这些图片",
  "image-search.component.UploadImg.Example": "示例",
  "image-search.app.layout.FigureSoutuDemo": "图搜图 Demo",
  "image-search.app.layout.OceanbaseDiagramSearchDiagramDemonstration": "OceanBase 图搜图演示应用",
  "oceanbase-demo.component.Storage.Storage1": "存储"
}